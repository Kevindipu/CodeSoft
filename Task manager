#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct Task {
    string description;
    bool completed = false;
};

void AddTask(vector<Task>& tasks, const string& description) {
    tasks.push_back({description, false});
    cout << "Task added: " << description << endl;
}

void ViewTasks(const vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks in the list." << endl;
        return;
    }

    cout << "Tasks:" << endl;
    for (size_t i = 0; i < tasks.size(); ++i) {
        cout << i + 1 << ". [" << (tasks[i].completed ? "Completed" : "Pending") << "] " << tasks[i].description << endl;
    }
}

void MarkTaskCompleted(vector<Task>& tasks, int taskIndex) {
    if (taskIndex >= 0 && taskIndex < static_cast<int>(tasks.size())) {
        tasks[taskIndex].completed = true;
        cout << "Task marked as completed: " << tasks[taskIndex].description << endl;
    } else {
        cout << "Invalid task index." << endl;
    }
}

void RemoveTask(vector<Task>& tasks, int taskIndex) {
    if (taskIndex >= 0 && taskIndex < static_cast<int>(tasks.size())) {
        cout << "Task removed: " << tasks[taskIndex].description << endl;
        tasks.erase(tasks.begin() + taskIndex);
    } else {
        cout << "Invalid task index." << endl;
    }
}

int main() {
    vector<Task> tasks;

    while (true) {
        cout << "To-Do List Manager" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Mark Task as Completed" << endl;
        cout << "4. Remove Task" << endl;
        cout << "5. Quit" << endl;

        int choice;
        cout << "Enter your choice: ";
        cin >> choice;

        
        
        if (choice == 1) {
            string description;
            cout << "Enter task description: ";
            cin.ignore();
            getline(cin, description);
            AddTask(tasks, description);
        } else if (choice == 2) {
            ViewTasks(tasks);
        } else if (choice == 3) {
            int taskIndex;
            ViewTasks(tasks);
            cout << "Enter task index to mark as completed: ";
            cin >> taskIndex;
            MarkTaskCompleted(tasks, taskIndex - 1);
        } else if (choice == 4) {
            int taskIndex;
            cout << "Enter task index to remove: ";
            cin >> taskIndex;
            RemoveTask(tasks, taskIndex - 1);
        } else if (choice == 5) {
            cout << "Quitting" << endl;
            break;
        }
        else if (!isdigit(choice))
        {
            cout<<"Enter a valid number\nQuitting\n"<<endl;
            break;
        }
         else {
            cout << "Invalid choice. Please try again." << endl;
        }
        cout << endl;
    }

    return 0;
}
